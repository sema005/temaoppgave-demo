{"version":3,"sources":["components/ChecklistSubmodule.js","components/Checklist.js","files/Movies.js","components/Localmovies.js","components/FilterMovies.js","App.js","serviceWorker.js","index.js"],"names":["ChecklistSubmodule","props","useState","checked","setChecked","className","todo","onClick","remove","myNumber","type","Checklist","todos","setTodos","i","filter","onKeyDown","e","keyCode","target","value","placeholder","map","Movies","title","releaseYear","img","titel","Localmovies","src","alt","FilterMovies","movies","setMovies","onInput","movie","toLocaleLowerCase","includes","key","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed02eb38.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { FaTrash } from \"react-icons/fa\";\n\nimport './ChecklistSubmodule.css'\n\nconst ChecklistSubmodule = (props) => {\n    const [checked, setChecked] = useState(false)\n    const checkMe = () => {\n        setChecked(!checked)\n    }\n    return(\n        <div className='submodule checklist-item'>\n           <li className={ checked ? 'checked' : '' } >{props.todo} </li>\n            <FaTrash className=\"remove\" onClick={() => props.remove(props.myNumber)}/>\n            <input type=\"checkbox\" onClick={checkMe} />\n        </div>\n    )\n}\n\nexport default ChecklistSubmodule","import React, {useState} from 'react'\nimport ChecklistSubmodule from './ChecklistSubmodule'\n\nconst Checklist = () => {\n    const array = [\"Feed cat\", \"Eat, drink\", \"sleep\", \"Stay optimistic\", \"Dont buy shitt!\"]\n    const [todos, setTodos] = useState(array)\n    const remove = (i) => {\n        setTodos(\n            todos.filter( todo => todo !== todos[i])\n        )\n    }\n    const addItem = (e) => {\n        if(e.keyCode === 13) {\n            setTodos([...todos, e.target.value])\n            e.target.value = ''\n        }\n    }\n   \n    return(\n        <div className='submodule'>\n            <h2>Checklist</h2>\n            <input type=\"text\" onKeyDown={addItem} placeholder=\"Add item to checklist\"  />\n            {\n                todos.map(\n                    (todo, i) => <ChecklistSubmodule remove={remove} myNumber={i} todo={todo}/>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Checklist","const Movies = {\n    \"description\": \"Favorite movies\",\n    \"movies\": [\n        {\n            title: \"The Fast and the Furious\",\n            releaseYear: \"Utgivelsesår: 2001\",\n            img: \"the-fast-and-the-furious.jpg\"\n        },\n        {\n            title: \"2 Fast 2 Furious\",\n            releaseYear : \"Utgivelsesår: 2003\",\n            img: \"../img/2fast2furious.jpg\"\n        },\n        {\n            title: \"The Fast and the Furious: Tokyo Drift\",\n            releaseYear : \"Utgivelsesår: 2006\",\n            img: \"../img/tokyo-drift.jpg\"\n        },\n        {\n            title: \"Fast & Furious\",\n            releaseYear: \"Utgivelsesår: 2009\",\n            img: \"../img/fast-and-furious.jpg\"\n        },\n        {\n            title: \"Fast Five\",\n            releaseYear: \"Utgivelsesår: 2011\",\n            img: \"../img/fast-five.jpg\"\n        },\n        {\n            title: \"Fast & Furious 6\",\n            releaseYear : \"Utgivelsesår: 2013\",\n            img: \"../img/fast-and-furious6.jpg\"\n        },\n        {\n            titel: \"Furious 7\",\n            releaseYear : \"Utgivelsesår: 2015\",\n            img: \"../img/fast-and-furious7.jpg\"\n        },\n        {\n            title: \"The fate of the furious\",\n            releaseYear : \"Utgivelsesår: 2017\",\n            img: \"../img/fate-and-furious.jpg\"\n        },\n        {\n            title: \"The Dark Knight\",\n            releaseYear : \"2008\",\n            img: \"../img/dark-knight.jpg\"\n        },\n        {\n            title: \"Forrest Gump\",\n            releaseYear : \"1994\",\n            img: \"../img/forrest-gump.jpg\"\n        },\n        {\n            title: \"The Lord of the Rings: The Fellowship of the Ring\",\n            releaseYear: \"Utgivelsesår: 2001\",\n            img: \"../img/ringenes-herre-fellowship.jpg\"\n        },\n        {\n            title: \"The Lord of the Rings: The Return of the King\",\n            releaseYear : \"Utgivelsesår: 2003\",\n            img: \"../img/ringenes-herre-return.jpg\"\n        },\n        {\n            title: \"Gladiator\",\n            releaseYear : \"Utgivelsesår: 2000\",\n            img: \"../img/gladiator.jpg\"\n        },\n        {\n            title: \"Pirates of the Caribbean: The Curse of the Black Pearl\",\n            releaseYear : \"Utgivelsesår: 2003\",\n            img: \"../img/potc-black-pearl.jpg\"\n        },\n        {\n            title: \"Back to the Future\",\n            releaseYear : \"Utgivelsesår: 1985\",\n            img: \"../img/back-to-the-future.jpg\"\n        },\n        {\n            title: \"WALL·E\",\n            releaseYear : \"Utgivelsesår: 2008\",\n            img: \"../img/wall·e.jpg\"\n        },\n        {\n            title: \"Up\",\n            releaseYear : \"Utgivelsesår: 2009\",\n            img: \"../img/up.jpg\"\n        },\n        {\n            title: \"E.T the Extra-Terrestrial\",\n            releaseYear : \"Utgivelsesår: 1982\",\n            img: \"../img/e-t.jpg\"\n        },\n        {\n            title: \"JAWS\",\n            releaseYear : \"Utgivelsesår: 1975\",\n            img: \"../img/jaws.jpg\"\n        },\n        {\n            title: \"Toy Story\",\n            releaseYear : \"Utgivelsesår: 2005\",\n            img: \"../img/tory-story.jpg\"\n        },\n\n    ]\n}\n\nexport default Movies","import React from 'react'\n\nconst Localmovies = (props) => {\n\n    return(\n        <div className=\"filmer\">\n            <img src={props.img} alt={\"Filmen: \" + props.title} />\n            <h1>{props.title}</h1>\n            <li>{props.releaseYear}</li>\n        </div>\n\n\n    )\n}\n\nexport default Localmovies","import React, {useState} from 'react'\nimport Movies from '../files/Movies'\nimport Localmovies from './Localmovies'\nimport './FilterMovies.css'\n\nconst FilterMovies = () => {\n    const [movies, setMovies] =useState(Movies.movies)\n    const filtermovie = (e) => {\n        setMovies(\n            Movies.movies.filter(\n                movie => movie.titel.toLocaleLowerCase().includes(e.target.value)\n            )\n        )\n    }\n\n    return(\n        <div className=\"filtermovies\">\n            <div className=\"movies\">\n            <input type=\"text\" placeholder=\"Søk etter film\" onInput={filtermovie} className=\"input\"/>\n                {\n                    movies.map(\n                        (movie, i) =>\n                        <Localmovies \n                            key={i}\n                            title={movie.title}\n                            releaseYear={movie.releaseYear}\n                            img={movie.img}\n                        />\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default FilterMovies","import React from 'react';\nimport './App.css';\nimport { Router, Link } from \"@reach/router\"\nimport Checklist from './components/Checklist'\nimport FilterMovies from './components/FilterMovies';\n\nconst App = () => {\n\n  return(\n    <div>\n      <header>\n        <nav className=\"top-nav\">\n          <Link to=\"/\">Checklist</Link>\n          <Link to=\"movies\">Movies</Link>\n        </nav>\n      </header>\n      <Router>\n        <Checklist path=\"/\" /> \n        <FilterMovies path=\"movies\" />\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}